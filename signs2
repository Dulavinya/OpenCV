import cv2
import pyautogui
from collections import Counter
from module import findnameoflandmark, findpostion, speak

def count_fingers(frame):
    positions = findpostion(frame)
    landmarks = findnameoflandmark(frame)

    if not positions or not landmarks:
        return None, None, None  # No hand detected

    fingers = []

    # Proper Thumb Detection
    thumb_up = positions[4][2] < positions[2][2]  # Thumb tip is above index base
    thumb_down = positions[4][2] > positions[2][2]  # Thumb tip is below index base

    # Check Other Fingers (Tip above PIP joint means it's extended)
    tip_ids = [8, 12, 16, 20]
    for tip in tip_ids:
        if positions[tip][2] < positions[tip - 2][2]:  
            fingers.append(1)  # Finger is up
        else:
            fingers.append(0)  # Finger is down

    count = Counter(fingers)
    up, down = count[1], count[0]

    # Fixing Gesture Detection
    gesture = "Unknown"
    if up == 4 and fingers[0] == 1:
        gesture = "Open Hand "
    elif up == 0:
        gesture = "Fist "
        #elif up == 2 and fingers[1] == 1 and fingers[2] == 1:
    elif up == 2 and fingers[1] == 1 and fingers[2] == 1:
        gesture = "Victory Sign "
    elif up == 1 and fingers[0] == 1 and all(f == 0 for f in fingers[1:]):
        if thumb_up:
            gesture = "Thumbs Up "
        elif thumb_down:
            gesture = "Thumbs Down "
    elif up == 1 and fingers[0] == 0 and fingers[1] == 1:
        gesture = "Pointing "

    return up, down, gesture

# Initialize camera
cap = cv2.VideoCapture(0)

while True:
    ret, frame = cap.read()
    if not ret:
        break  

    frame = cv2.resize(frame, (640, 480))
    up, down, gesture = count_fingers(frame)

    if up is not None:
        text = f'Fingers Up: {up}, Gesture: {gesture}'
        print(text)
        cv2.putText(frame, text, (50, 50), cv2.FONT_HERSHEY_SIMPLEX, .7, (0, 255, 0), 2)
    else:
        cv2.putText(frame, "No hand detected", (50, 50), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 0, 255), 2)

    cv2.imshow("Frame", frame)
    key = cv2.waitKey(1) & 0xFF

    if key == ord("q") and up is not None:
        speak(f"You have {up} fingers up. Gesture: {gesture}")

    if key == ord("s"):
        break

cap.release()
cv2.destroyAllWindows()

import cv2
import pyautogui
from collections import Counter
from module import findnameoflandmark, findpostion, speak

def count_fingers(frame):
    positions = findpostion(frame)
    landmarks = findnameoflandmark(frame)

    if not positions or not landmarks:
        return None, None, None  # No hand detected

    fingers = []

    # Thumb (check if it's to the left or right of the index finger)
    if positions[4][1] > positions[3][1]:  # Adjust for left/right hand
        fingers.append(1)  # Thumb is up
    else:
        fingers.append(0)  # Thumb is down

    # Other fingers (Tip Y-coordinates vs PIP joints)
    tip_ids = [8, 12, 16, 20]
    for tip in tip_ids:
        if positions[tip][2] < positions[tip - 2][2]:  # Finger is up
            fingers.append(1)
        else:
            fingers.append(0)

    count = Counter(fingers)
    up, down = count[1], count[0]

    # Recognizing Gestures
    gesture = "Unknown"
    if up == 5:
        gesture = "Open Hand"
       # pyautogui.screenshot("screenshot.png")  # Take a screenshot
    elif up == 0:
        gesture = "Fist"
    elif up == 2 and fingers[1] == 1 and fingers[2] == 1:
        gesture = "Victory Sign"
    elif up == 1 and fingers[0] == 1:
        gesture = "Thumbs Up"

    return up, down, gesture

# Initialize camera
cap = cv2.VideoCapture(0)

while True:
    ret, frame = cap.read()
    if not ret:
        break  # Exit if camera feed is unavailable

    frame = cv2.resize(frame, (640, 480))
    up, down, gesture = count_fingers(frame)

    if up is not None:
        text = f'Fingers Up: {up}, Fingers Down: {down}, Gesture: {gesture}'
        print(text)
        cv2.putText(frame, text, (50, 50), cv2.FONT_HERSHEY_SIMPLEX, .5, (0, 255, 0), 2)
    else:
        cv2.putText(frame, "No hand detected", (50, 50), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 0, 255), 2)

    cv2.imshow("Frame", frame)
    key = cv2.waitKey(1) & 0xFF

    if key == ord("q") and up is not None:
        speak(f"You have {up} fingers up and {down} fingers down. Gesture: {gesture}")

    if key == ord("s"):
        break

cap.release()
cv2.destroyAllWindows()
